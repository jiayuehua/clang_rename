
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'



    strategy:
      matrix:
      os: ['windows-2019', 'ubuntu-20.04']
      include:
        - os: 'windows-2019'
          triplet: 'x64-windows'
          mono: ''
        - os: 'ubuntu-20.04'
          triplet: 'WSL-Clang-Debug'
          # To run `nuget.exe` on non-Windows platforms, we must use `mono`.
          mono: 'mono'
      
    #The type of runner that the job will run on
    #runs-on: ubuntu-latest
    runs-on: ${{ matrix.os }}


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!



     # This step assumes `vcpkg` has been bootstrapped (run `./vcpkg/bootstrap-vcpkg`)
      - name: 'Setup NuGet Credentials'
        shell: 'bash'
        # Replace <OWNER> with your organization name
        run: >
          ${{ matrix.mono }} `vcpkg/vcpkg fetch nuget | tail -n 1`
          sources add
          -source "https://nuget.pkg.github.com/<OWNER>/index.json"
          -storepasswordincleartext
          -name "GitHub"
          -username "<OWNER>"
          -password "${{ secrets.GITHUB_TOKEN }}"

      # Omit this step if you're using manifests
      - name: 'vcpkg package restore'
        shell: 'bash'
        run: >
          vcpkg/vcpkg install sqlite3 cpprestsdk --triplet ${{ matrix.triplet }}
